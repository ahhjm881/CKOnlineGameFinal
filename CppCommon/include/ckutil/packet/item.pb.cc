// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: item.proto

#include "item.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace CKPacket {
PROTOBUF_CONSTEXPR resPlayerJoin::resPlayerJoin(
    ::_pbi::ConstantInitialized) {}
struct resPlayerJoinDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resPlayerJoinDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resPlayerJoinDefaultTypeInternal() {}
  union {
    resPlayerJoin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resPlayerJoinDefaultTypeInternal _resPlayerJoin_default_instance_;
PROTOBUF_CONSTEXPR reqPing::reqPing(
    ::_pbi::ConstantInitialized) {}
struct reqPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqPingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqPingDefaultTypeInternal() {}
  union {
    reqPing _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqPingDefaultTypeInternal _reqPing_default_instance_;
PROTOBUF_CONSTEXPR resPing::resPing(
    ::_pbi::ConstantInitialized) {}
struct resPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resPingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resPingDefaultTypeInternal() {}
  union {
    resPing _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resPingDefaultTypeInternal _resPing_default_instance_;
PROTOBUF_CONSTEXPR reqPlayerPosition::reqPlayerPosition(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.y_)*/0
  , /*decltype(_impl_.z_)*/0
  , /*decltype(_impl_.index_)*/0} {}
struct reqPlayerPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqPlayerPositionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqPlayerPositionDefaultTypeInternal() {}
  union {
    reqPlayerPosition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqPlayerPositionDefaultTypeInternal _reqPlayerPosition_default_instance_;
PROTOBUF_CONSTEXPR resPlayerPosition::resPlayerPosition(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.y_)*/0
  , /*decltype(_impl_.z_)*/0
  , /*decltype(_impl_.index_)*/0} {}
struct resPlayerPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resPlayerPositionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resPlayerPositionDefaultTypeInternal() {}
  union {
    resPlayerPosition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resPlayerPositionDefaultTypeInternal _resPlayerPosition_default_instance_;
PROTOBUF_CONSTEXPR resReplicatedPlayerGen::resReplicatedPlayerGen(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.index_)*/0} {}
struct resReplicatedPlayerGenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resReplicatedPlayerGenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resReplicatedPlayerGenDefaultTypeInternal() {}
  union {
    resReplicatedPlayerGen _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resReplicatedPlayerGenDefaultTypeInternal _resReplicatedPlayerGen_default_instance_;
PROTOBUF_CONSTEXPR resReplicatedPlayerDes::resReplicatedPlayerDes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.index_)*/0} {}
struct resReplicatedPlayerDesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resReplicatedPlayerDesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resReplicatedPlayerDesDefaultTypeInternal() {}
  union {
    resReplicatedPlayerDes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resReplicatedPlayerDesDefaultTypeInternal _resReplicatedPlayerDes_default_instance_;
PROTOBUF_CONSTEXPR reqReplicatedPlayerGen::reqReplicatedPlayerGen(
    ::_pbi::ConstantInitialized) {}
struct reqReplicatedPlayerGenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqReplicatedPlayerGenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqReplicatedPlayerGenDefaultTypeInternal() {}
  union {
    reqReplicatedPlayerGen _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqReplicatedPlayerGenDefaultTypeInternal _reqReplicatedPlayerGen_default_instance_;
PROTOBUF_CONSTEXPR reqReplicatedPlayerDes::reqReplicatedPlayerDes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.index_)*/0} {}
struct reqReplicatedPlayerDesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqReplicatedPlayerDesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqReplicatedPlayerDesDefaultTypeInternal() {}
  union {
    reqReplicatedPlayerDes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqReplicatedPlayerDesDefaultTypeInternal _reqReplicatedPlayerDes_default_instance_;
}  // namespace CKPacket
static ::_pb::Metadata file_level_metadata_item_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_item_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_item_2eproto = nullptr;

const uint32_t TableStruct_item_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerJoin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _impl_.z_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _impl_.index_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _impl_.z_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _impl_.index_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerGen, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerGen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerGen, _impl_.index_),
  0,
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerDes, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerDes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerDes, _impl_.index_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqReplicatedPlayerGen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqReplicatedPlayerDes, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqReplicatedPlayerDes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqReplicatedPlayerDes, _impl_.index_),
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::CKPacket::resPlayerJoin)},
  { 6, -1, -1, sizeof(::CKPacket::reqPing)},
  { 12, -1, -1, sizeof(::CKPacket::resPing)},
  { 18, 28, -1, sizeof(::CKPacket::reqPlayerPosition)},
  { 32, 42, -1, sizeof(::CKPacket::resPlayerPosition)},
  { 46, 53, -1, sizeof(::CKPacket::resReplicatedPlayerGen)},
  { 54, 61, -1, sizeof(::CKPacket::resReplicatedPlayerDes)},
  { 62, -1, -1, sizeof(::CKPacket::reqReplicatedPlayerGen)},
  { 68, 75, -1, sizeof(::CKPacket::reqReplicatedPlayerDes)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::CKPacket::_resPlayerJoin_default_instance_._instance,
  &::CKPacket::_reqPing_default_instance_._instance,
  &::CKPacket::_resPing_default_instance_._instance,
  &::CKPacket::_reqPlayerPosition_default_instance_._instance,
  &::CKPacket::_resPlayerPosition_default_instance_._instance,
  &::CKPacket::_resReplicatedPlayerGen_default_instance_._instance,
  &::CKPacket::_resReplicatedPlayerDes_default_instance_._instance,
  &::CKPacket::_reqReplicatedPlayerGen_default_instance_._instance,
  &::CKPacket::_reqReplicatedPlayerDes_default_instance_._instance,
};

const char descriptor_table_protodef_item_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nitem.proto\022\010CKPacket\"\017\n\rresPlayerJoin\""
  "\t\n\007reqPing\"\t\n\007resPing\"s\n\021reqPlayerPositi"
  "on\022\016\n\001x\030\001 \001(\002H\000\210\001\001\022\016\n\001y\030\002 \001(\002H\001\210\001\001\022\016\n\001z\030"
  "\003 \001(\002H\002\210\001\001\022\022\n\005index\030\004 \001(\005H\003\210\001\001B\004\n\002_xB\004\n\002"
  "_yB\004\n\002_zB\010\n\006_index\"s\n\021resPlayerPosition\022"
  "\016\n\001x\030\001 \001(\002H\000\210\001\001\022\016\n\001y\030\002 \001(\002H\001\210\001\001\022\016\n\001z\030\003 \001"
  "(\002H\002\210\001\001\022\022\n\005index\030\004 \001(\005H\003\210\001\001B\004\n\002_xB\004\n\002_yB"
  "\004\n\002_zB\010\n\006_index\"6\n\026resReplicatedPlayerGe"
  "n\022\022\n\005index\030\001 \001(\005H\000\210\001\001B\010\n\006_index\"6\n\026resRe"
  "plicatedPlayerDes\022\022\n\005index\030\001 \001(\005H\000\210\001\001B\010\n"
  "\006_index\"\030\n\026reqReplicatedPlayerGen\"6\n\026req"
  "ReplicatedPlayerDes\022\022\n\005index\030\001 \001(\005H\000\210\001\001B"
  "\010\n\006_indexb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_item_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_item_2eproto = {
    false, false, 497, descriptor_table_protodef_item_2eproto,
    "item.proto",
    &descriptor_table_item_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_item_2eproto::offsets,
    file_level_metadata_item_2eproto, file_level_enum_descriptors_item_2eproto,
    file_level_service_descriptors_item_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_item_2eproto_getter() {
  return &descriptor_table_item_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_item_2eproto(&descriptor_table_item_2eproto);
namespace CKPacket {

// ===================================================================

class resPlayerJoin::_Internal {
 public:
};

resPlayerJoin::resPlayerJoin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CKPacket.resPlayerJoin)
}
resPlayerJoin::resPlayerJoin(const resPlayerJoin& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  resPlayerJoin* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CKPacket.resPlayerJoin)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resPlayerJoin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resPlayerJoin::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata resPlayerJoin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[0]);
}

// ===================================================================

class reqPing::_Internal {
 public:
};

reqPing::reqPing(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqPing)
}
reqPing::reqPing(const reqPing& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  reqPing* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqPing)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqPing::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqPing::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata reqPing::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[1]);
}

// ===================================================================

class resPing::_Internal {
 public:
};

resPing::resPing(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CKPacket.resPing)
}
resPing::resPing(const resPing& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  resPing* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CKPacket.resPing)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resPing::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resPing::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata resPing::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[2]);
}

// ===================================================================

class reqPlayerPosition::_Internal {
 public:
  using HasBits = decltype(std::declval<reqPlayerPosition>()._impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

reqPlayerPosition::reqPlayerPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqPlayerPosition)
}
reqPlayerPosition::reqPlayerPosition(const reqPlayerPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reqPlayerPosition* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , decltype(_impl_.z_){}
    , decltype(_impl_.index_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.x_, &from._impl_.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.index_) -
    reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.index_));
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqPlayerPosition)
}

inline void reqPlayerPosition::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){0}
    , decltype(_impl_.y_){0}
    , decltype(_impl_.z_){0}
    , decltype(_impl_.index_){0}
  };
}

reqPlayerPosition::~reqPlayerPosition() {
  // @@protoc_insertion_point(destructor:CKPacket.reqPlayerPosition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reqPlayerPosition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void reqPlayerPosition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reqPlayerPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.reqPlayerPosition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.index_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.index_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reqPlayerPosition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _Internal::set_has_x(&has_bits);
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_y(&has_bits);
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _Internal::set_has_z(&has_bits);
          _impl_.z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional int32 index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_index(&has_bits);
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reqPlayerPosition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.reqPlayerPosition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional float x = 1;
  if (_internal_has_x()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // optional float y = 2;
  if (_internal_has_y()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // optional float z = 3;
  if (_internal_has_z()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  // optional int32 index = 4;
  if (_internal_has_index()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.reqPlayerPosition)
  return target;
}

size_t reqPlayerPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.reqPlayerPosition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional float x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional int32 index = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqPlayerPosition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reqPlayerPosition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqPlayerPosition::GetClassData() const { return &_class_data_; }


void reqPlayerPosition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reqPlayerPosition*>(&to_msg);
  auto& from = static_cast<const reqPlayerPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.reqPlayerPosition)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.index_ = from._impl_.index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reqPlayerPosition::CopyFrom(const reqPlayerPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.reqPlayerPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqPlayerPosition::IsInitialized() const {
  return true;
}

void reqPlayerPosition::InternalSwap(reqPlayerPosition* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(reqPlayerPosition, _impl_.index_)
      + sizeof(reqPlayerPosition::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(reqPlayerPosition, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata reqPlayerPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[3]);
}

// ===================================================================

class resPlayerPosition::_Internal {
 public:
  using HasBits = decltype(std::declval<resPlayerPosition>()._impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

resPlayerPosition::resPlayerPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resPlayerPosition)
}
resPlayerPosition::resPlayerPosition(const resPlayerPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resPlayerPosition* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , decltype(_impl_.z_){}
    , decltype(_impl_.index_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.x_, &from._impl_.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.index_) -
    reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.index_));
  // @@protoc_insertion_point(copy_constructor:CKPacket.resPlayerPosition)
}

inline void resPlayerPosition::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){0}
    , decltype(_impl_.y_){0}
    , decltype(_impl_.z_){0}
    , decltype(_impl_.index_){0}
  };
}

resPlayerPosition::~resPlayerPosition() {
  // @@protoc_insertion_point(destructor:CKPacket.resPlayerPosition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resPlayerPosition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void resPlayerPosition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resPlayerPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resPlayerPosition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.index_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.index_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resPlayerPosition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _Internal::set_has_x(&has_bits);
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_y(&has_bits);
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _Internal::set_has_z(&has_bits);
          _impl_.z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional int32 index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_index(&has_bits);
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resPlayerPosition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resPlayerPosition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional float x = 1;
  if (_internal_has_x()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // optional float y = 2;
  if (_internal_has_y()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // optional float z = 3;
  if (_internal_has_z()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  // optional int32 index = 4;
  if (_internal_has_index()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resPlayerPosition)
  return target;
}

size_t resPlayerPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resPlayerPosition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional float x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional int32 index = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resPlayerPosition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resPlayerPosition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resPlayerPosition::GetClassData() const { return &_class_data_; }


void resPlayerPosition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resPlayerPosition*>(&to_msg);
  auto& from = static_cast<const resPlayerPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resPlayerPosition)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.index_ = from._impl_.index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resPlayerPosition::CopyFrom(const resPlayerPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resPlayerPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resPlayerPosition::IsInitialized() const {
  return true;
}

void resPlayerPosition::InternalSwap(resPlayerPosition* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(resPlayerPosition, _impl_.index_)
      + sizeof(resPlayerPosition::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(resPlayerPosition, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata resPlayerPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[4]);
}

// ===================================================================

class resReplicatedPlayerGen::_Internal {
 public:
  using HasBits = decltype(std::declval<resReplicatedPlayerGen>()._impl_._has_bits_);
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

resReplicatedPlayerGen::resReplicatedPlayerGen(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resReplicatedPlayerGen)
}
resReplicatedPlayerGen::resReplicatedPlayerGen(const resReplicatedPlayerGen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resReplicatedPlayerGen* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:CKPacket.resReplicatedPlayerGen)
}

inline void resReplicatedPlayerGen::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){0}
  };
}

resReplicatedPlayerGen::~resReplicatedPlayerGen() {
  // @@protoc_insertion_point(destructor:CKPacket.resReplicatedPlayerGen)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resReplicatedPlayerGen::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void resReplicatedPlayerGen::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resReplicatedPlayerGen::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resReplicatedPlayerGen)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resReplicatedPlayerGen::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_index(&has_bits);
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resReplicatedPlayerGen::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resReplicatedPlayerGen)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 index = 1;
  if (_internal_has_index()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resReplicatedPlayerGen)
  return target;
}

size_t resReplicatedPlayerGen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resReplicatedPlayerGen)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 index = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resReplicatedPlayerGen::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resReplicatedPlayerGen::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resReplicatedPlayerGen::GetClassData() const { return &_class_data_; }


void resReplicatedPlayerGen::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resReplicatedPlayerGen*>(&to_msg);
  auto& from = static_cast<const resReplicatedPlayerGen&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resReplicatedPlayerGen)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_index()) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resReplicatedPlayerGen::CopyFrom(const resReplicatedPlayerGen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resReplicatedPlayerGen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resReplicatedPlayerGen::IsInitialized() const {
  return true;
}

void resReplicatedPlayerGen::InternalSwap(resReplicatedPlayerGen* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata resReplicatedPlayerGen::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[5]);
}

// ===================================================================

class resReplicatedPlayerDes::_Internal {
 public:
  using HasBits = decltype(std::declval<resReplicatedPlayerDes>()._impl_._has_bits_);
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

resReplicatedPlayerDes::resReplicatedPlayerDes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resReplicatedPlayerDes)
}
resReplicatedPlayerDes::resReplicatedPlayerDes(const resReplicatedPlayerDes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resReplicatedPlayerDes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:CKPacket.resReplicatedPlayerDes)
}

inline void resReplicatedPlayerDes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){0}
  };
}

resReplicatedPlayerDes::~resReplicatedPlayerDes() {
  // @@protoc_insertion_point(destructor:CKPacket.resReplicatedPlayerDes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resReplicatedPlayerDes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void resReplicatedPlayerDes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resReplicatedPlayerDes::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resReplicatedPlayerDes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resReplicatedPlayerDes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_index(&has_bits);
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resReplicatedPlayerDes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resReplicatedPlayerDes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 index = 1;
  if (_internal_has_index()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resReplicatedPlayerDes)
  return target;
}

size_t resReplicatedPlayerDes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resReplicatedPlayerDes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 index = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resReplicatedPlayerDes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resReplicatedPlayerDes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resReplicatedPlayerDes::GetClassData() const { return &_class_data_; }


void resReplicatedPlayerDes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resReplicatedPlayerDes*>(&to_msg);
  auto& from = static_cast<const resReplicatedPlayerDes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resReplicatedPlayerDes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_index()) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resReplicatedPlayerDes::CopyFrom(const resReplicatedPlayerDes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resReplicatedPlayerDes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resReplicatedPlayerDes::IsInitialized() const {
  return true;
}

void resReplicatedPlayerDes::InternalSwap(resReplicatedPlayerDes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata resReplicatedPlayerDes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[6]);
}

// ===================================================================

class reqReplicatedPlayerGen::_Internal {
 public:
};

reqReplicatedPlayerGen::reqReplicatedPlayerGen(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqReplicatedPlayerGen)
}
reqReplicatedPlayerGen::reqReplicatedPlayerGen(const reqReplicatedPlayerGen& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  reqReplicatedPlayerGen* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqReplicatedPlayerGen)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqReplicatedPlayerGen::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqReplicatedPlayerGen::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata reqReplicatedPlayerGen::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[7]);
}

// ===================================================================

class reqReplicatedPlayerDes::_Internal {
 public:
  using HasBits = decltype(std::declval<reqReplicatedPlayerDes>()._impl_._has_bits_);
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

reqReplicatedPlayerDes::reqReplicatedPlayerDes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqReplicatedPlayerDes)
}
reqReplicatedPlayerDes::reqReplicatedPlayerDes(const reqReplicatedPlayerDes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reqReplicatedPlayerDes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqReplicatedPlayerDes)
}

inline void reqReplicatedPlayerDes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){0}
  };
}

reqReplicatedPlayerDes::~reqReplicatedPlayerDes() {
  // @@protoc_insertion_point(destructor:CKPacket.reqReplicatedPlayerDes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reqReplicatedPlayerDes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void reqReplicatedPlayerDes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reqReplicatedPlayerDes::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.reqReplicatedPlayerDes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reqReplicatedPlayerDes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_index(&has_bits);
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reqReplicatedPlayerDes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.reqReplicatedPlayerDes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 index = 1;
  if (_internal_has_index()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.reqReplicatedPlayerDes)
  return target;
}

size_t reqReplicatedPlayerDes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.reqReplicatedPlayerDes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 index = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqReplicatedPlayerDes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reqReplicatedPlayerDes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqReplicatedPlayerDes::GetClassData() const { return &_class_data_; }


void reqReplicatedPlayerDes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reqReplicatedPlayerDes*>(&to_msg);
  auto& from = static_cast<const reqReplicatedPlayerDes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.reqReplicatedPlayerDes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_index()) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reqReplicatedPlayerDes::CopyFrom(const reqReplicatedPlayerDes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.reqReplicatedPlayerDes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqReplicatedPlayerDes::IsInitialized() const {
  return true;
}

void reqReplicatedPlayerDes::InternalSwap(reqReplicatedPlayerDes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata reqReplicatedPlayerDes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace CKPacket
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CKPacket::resPlayerJoin*
Arena::CreateMaybeMessage< ::CKPacket::resPlayerJoin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resPlayerJoin >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqPing*
Arena::CreateMaybeMessage< ::CKPacket::reqPing >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqPing >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resPing*
Arena::CreateMaybeMessage< ::CKPacket::resPing >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resPing >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqPlayerPosition*
Arena::CreateMaybeMessage< ::CKPacket::reqPlayerPosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqPlayerPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resPlayerPosition*
Arena::CreateMaybeMessage< ::CKPacket::resPlayerPosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resPlayerPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resReplicatedPlayerGen*
Arena::CreateMaybeMessage< ::CKPacket::resReplicatedPlayerGen >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resReplicatedPlayerGen >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resReplicatedPlayerDes*
Arena::CreateMaybeMessage< ::CKPacket::resReplicatedPlayerDes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resReplicatedPlayerDes >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqReplicatedPlayerGen*
Arena::CreateMaybeMessage< ::CKPacket::reqReplicatedPlayerGen >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqReplicatedPlayerGen >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqReplicatedPlayerDes*
Arena::CreateMaybeMessage< ::CKPacket::reqReplicatedPlayerDes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqReplicatedPlayerDes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
