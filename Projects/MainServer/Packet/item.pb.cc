// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: item.proto

#include "item.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace CKPacket {
PROTOBUF_CONSTEXPR resPlayerJoin::resPlayerJoin(
    ::_pbi::ConstantInitialized) {}
struct resPlayerJoinDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resPlayerJoinDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resPlayerJoinDefaultTypeInternal() {}
  union {
    resPlayerJoin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resPlayerJoinDefaultTypeInternal _resPlayerJoin_default_instance_;
PROTOBUF_CONSTEXPR reqPing::reqPing(
    ::_pbi::ConstantInitialized) {}
struct reqPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqPingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqPingDefaultTypeInternal() {}
  union {
    reqPing _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqPingDefaultTypeInternal _reqPing_default_instance_;
PROTOBUF_CONSTEXPR resPing::resPing(
    ::_pbi::ConstantInitialized) {}
struct resPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resPingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resPingDefaultTypeInternal() {}
  union {
    resPing _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resPingDefaultTypeInternal _resPing_default_instance_;
PROTOBUF_CONSTEXPR reqNotifyPlayerName::reqNotifyPlayerName(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct reqNotifyPlayerNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqNotifyPlayerNameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqNotifyPlayerNameDefaultTypeInternal() {}
  union {
    reqNotifyPlayerName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqNotifyPlayerNameDefaultTypeInternal _reqNotifyPlayerName_default_instance_;
PROTOBUF_CONSTEXPR reqPlayerPosition::reqPlayerPosition(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.y_)*/0
  , /*decltype(_impl_.z_)*/0
  , /*decltype(_impl_.index_)*/0} {}
struct reqPlayerPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqPlayerPositionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqPlayerPositionDefaultTypeInternal() {}
  union {
    reqPlayerPosition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqPlayerPositionDefaultTypeInternal _reqPlayerPosition_default_instance_;
PROTOBUF_CONSTEXPR resPlayerPosition::resPlayerPosition(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.y_)*/0
  , /*decltype(_impl_.z_)*/0
  , /*decltype(_impl_.index_)*/0} {}
struct resPlayerPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resPlayerPositionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resPlayerPositionDefaultTypeInternal() {}
  union {
    resPlayerPosition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resPlayerPositionDefaultTypeInternal _resPlayerPosition_default_instance_;
PROTOBUF_CONSTEXPR resReplicatedPlayerGen::resReplicatedPlayerGen(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.index_)*/0} {}
struct resReplicatedPlayerGenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resReplicatedPlayerGenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resReplicatedPlayerGenDefaultTypeInternal() {}
  union {
    resReplicatedPlayerGen _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resReplicatedPlayerGenDefaultTypeInternal _resReplicatedPlayerGen_default_instance_;
PROTOBUF_CONSTEXPR resReplicatedPlayerDes::resReplicatedPlayerDes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.index_)*/0} {}
struct resReplicatedPlayerDesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resReplicatedPlayerDesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resReplicatedPlayerDesDefaultTypeInternal() {}
  union {
    resReplicatedPlayerDes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resReplicatedPlayerDesDefaultTypeInternal _resReplicatedPlayerDes_default_instance_;
PROTOBUF_CONSTEXPR reqReplicatedPlayerGen::reqReplicatedPlayerGen(
    ::_pbi::ConstantInitialized) {}
struct reqReplicatedPlayerGenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqReplicatedPlayerGenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqReplicatedPlayerGenDefaultTypeInternal() {}
  union {
    reqReplicatedPlayerGen _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqReplicatedPlayerGenDefaultTypeInternal _reqReplicatedPlayerGen_default_instance_;
PROTOBUF_CONSTEXPR reqReplicatedPlayerDes::reqReplicatedPlayerDes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.index_)*/0} {}
struct reqReplicatedPlayerDesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqReplicatedPlayerDesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqReplicatedPlayerDesDefaultTypeInternal() {}
  union {
    reqReplicatedPlayerDes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqReplicatedPlayerDesDefaultTypeInternal _reqReplicatedPlayerDes_default_instance_;
PROTOBUF_CONSTEXPR reqAddToItem::reqAddToItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct reqAddToItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqAddToItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqAddToItemDefaultTypeInternal() {}
  union {
    reqAddToItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqAddToItemDefaultTypeInternal _reqAddToItem_default_instance_;
PROTOBUF_CONSTEXPR resAddToItem::resAddToItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct resAddToItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resAddToItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resAddToItemDefaultTypeInternal() {}
  union {
    resAddToItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resAddToItemDefaultTypeInternal _resAddToItem_default_instance_;
PROTOBUF_CONSTEXPR reqRemoveFromItem::reqRemoveFromItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct reqRemoveFromItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqRemoveFromItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqRemoveFromItemDefaultTypeInternal() {}
  union {
    reqRemoveFromItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqRemoveFromItemDefaultTypeInternal _reqRemoveFromItem_default_instance_;
PROTOBUF_CONSTEXPR resRemoveFromToItem::resRemoveFromToItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct resRemoveFromToItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resRemoveFromToItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resRemoveFromToItemDefaultTypeInternal() {}
  union {
    resRemoveFromToItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resRemoveFromToItemDefaultTypeInternal _resRemoveFromToItem_default_instance_;
PROTOBUF_CONSTEXPR reqInventoryItems::reqInventoryItems(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct reqInventoryItemsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqInventoryItemsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqInventoryItemsDefaultTypeInternal() {}
  union {
    reqInventoryItems _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqInventoryItemsDefaultTypeInternal _reqInventoryItems_default_instance_;
PROTOBUF_CONSTEXPR resInventoryItems::resInventoryItems(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct resInventoryItemsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resInventoryItemsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resInventoryItemsDefaultTypeInternal() {}
  union {
    resInventoryItems _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resInventoryItemsDefaultTypeInternal _resInventoryItems_default_instance_;
PROTOBUF_CONSTEXPR itemInfo::itemInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.itemname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.itemdesc_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.itemid_)*/0
  , /*decltype(_impl_.count_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct itemInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR itemInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~itemInfoDefaultTypeInternal() {}
  union {
    itemInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 itemInfoDefaultTypeInternal _itemInfo_default_instance_;
PROTOBUF_CONSTEXPR reqShopItemList::reqShopItemList(
    ::_pbi::ConstantInitialized) {}
struct reqShopItemListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqShopItemListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqShopItemListDefaultTypeInternal() {}
  union {
    reqShopItemList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqShopItemListDefaultTypeInternal _reqShopItemList_default_instance_;
PROTOBUF_CONSTEXPR resShopItemList::resShopItemList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct resShopItemListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resShopItemListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resShopItemListDefaultTypeInternal() {}
  union {
    resShopItemList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resShopItemListDefaultTypeInternal _resShopItemList_default_instance_;
PROTOBUF_CONSTEXPR shopItem::shopItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.itemname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.itemdesc_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.itemid_)*/0
  , /*decltype(_impl_.itemcount_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct shopItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR shopItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~shopItemDefaultTypeInternal() {}
  union {
    shopItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 shopItemDefaultTypeInternal _shopItem_default_instance_;
PROTOBUF_CONSTEXPR reqShopBuy::reqShopBuy(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.playername_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.itemid_)*/0
  , /*decltype(_impl_.count_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct reqShopBuyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqShopBuyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqShopBuyDefaultTypeInternal() {}
  union {
    reqShopBuy _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqShopBuyDefaultTypeInternal _reqShopBuy_default_instance_;
PROTOBUF_CONSTEXPR resShopBuy::resShopBuy(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct resShopBuyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resShopBuyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resShopBuyDefaultTypeInternal() {}
  union {
    resShopBuy _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resShopBuyDefaultTypeInternal _resShopBuy_default_instance_;
PROTOBUF_CONSTEXPR reqShopSell::reqShopSell(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.playername_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.itemid_)*/0
  , /*decltype(_impl_.count_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct reqShopSellDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reqShopSellDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reqShopSellDefaultTypeInternal() {}
  union {
    reqShopSell _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reqShopSellDefaultTypeInternal _reqShopSell_default_instance_;
PROTOBUF_CONSTEXPR resShopSell::resShopSell(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct resShopSellDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resShopSellDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~resShopSellDefaultTypeInternal() {}
  union {
    resShopSell _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resShopSellDefaultTypeInternal _resShopSell_default_instance_;
}  // namespace CKPacket
static ::_pb::Metadata file_level_metadata_item_2eproto[24];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_item_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_item_2eproto = nullptr;

const uint32_t TableStruct_item_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerJoin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqNotifyPlayerName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqNotifyPlayerName, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _impl_.z_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqPlayerPosition, _impl_.index_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _impl_.z_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resPlayerPosition, _impl_.index_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerGen, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerGen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerGen, _impl_.index_),
  0,
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerDes, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerDes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resReplicatedPlayerDes, _impl_.index_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqReplicatedPlayerGen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqReplicatedPlayerDes, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqReplicatedPlayerDes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqReplicatedPlayerDes, _impl_.index_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqAddToItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqAddToItem, _impl_.item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resAddToItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resAddToItem, _impl_.item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqRemoveFromItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqRemoveFromItem, _impl_.item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resRemoveFromToItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resRemoveFromToItem, _impl_.item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqInventoryItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqInventoryItems, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resInventoryItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resInventoryItems, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::itemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::itemInfo, _impl_.itemid_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::itemInfo, _impl_.itemname_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::itemInfo, _impl_.itemdesc_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::itemInfo, _impl_.count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqShopItemList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resShopItemList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resShopItemList, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::shopItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::shopItem, _impl_.itemid_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::shopItem, _impl_.itemname_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::shopItem, _impl_.itemdesc_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::shopItem, _impl_.itemcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqShopBuy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqShopBuy, _impl_.playername_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqShopBuy, _impl_.itemid_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqShopBuy, _impl_.count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resShopBuy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resShopBuy, _impl_.success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqShopSell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqShopSell, _impl_.playername_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqShopSell, _impl_.itemid_),
  PROTOBUF_FIELD_OFFSET(::CKPacket::reqShopSell, _impl_.count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resShopSell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CKPacket::resShopSell, _impl_.success_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::CKPacket::resPlayerJoin)},
  { 6, -1, -1, sizeof(::CKPacket::reqPing)},
  { 12, -1, -1, sizeof(::CKPacket::resPing)},
  { 18, -1, -1, sizeof(::CKPacket::reqNotifyPlayerName)},
  { 25, 35, -1, sizeof(::CKPacket::reqPlayerPosition)},
  { 39, 49, -1, sizeof(::CKPacket::resPlayerPosition)},
  { 53, 60, -1, sizeof(::CKPacket::resReplicatedPlayerGen)},
  { 61, 68, -1, sizeof(::CKPacket::resReplicatedPlayerDes)},
  { 69, -1, -1, sizeof(::CKPacket::reqReplicatedPlayerGen)},
  { 75, 82, -1, sizeof(::CKPacket::reqReplicatedPlayerDes)},
  { 83, -1, -1, sizeof(::CKPacket::reqAddToItem)},
  { 90, -1, -1, sizeof(::CKPacket::resAddToItem)},
  { 97, -1, -1, sizeof(::CKPacket::reqRemoveFromItem)},
  { 104, -1, -1, sizeof(::CKPacket::resRemoveFromToItem)},
  { 111, -1, -1, sizeof(::CKPacket::reqInventoryItems)},
  { 118, -1, -1, sizeof(::CKPacket::resInventoryItems)},
  { 125, -1, -1, sizeof(::CKPacket::itemInfo)},
  { 135, -1, -1, sizeof(::CKPacket::reqShopItemList)},
  { 141, -1, -1, sizeof(::CKPacket::resShopItemList)},
  { 148, -1, -1, sizeof(::CKPacket::shopItem)},
  { 158, -1, -1, sizeof(::CKPacket::reqShopBuy)},
  { 167, -1, -1, sizeof(::CKPacket::resShopBuy)},
  { 174, -1, -1, sizeof(::CKPacket::reqShopSell)},
  { 183, -1, -1, sizeof(::CKPacket::resShopSell)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::CKPacket::_resPlayerJoin_default_instance_._instance,
  &::CKPacket::_reqPing_default_instance_._instance,
  &::CKPacket::_resPing_default_instance_._instance,
  &::CKPacket::_reqNotifyPlayerName_default_instance_._instance,
  &::CKPacket::_reqPlayerPosition_default_instance_._instance,
  &::CKPacket::_resPlayerPosition_default_instance_._instance,
  &::CKPacket::_resReplicatedPlayerGen_default_instance_._instance,
  &::CKPacket::_resReplicatedPlayerDes_default_instance_._instance,
  &::CKPacket::_reqReplicatedPlayerGen_default_instance_._instance,
  &::CKPacket::_reqReplicatedPlayerDes_default_instance_._instance,
  &::CKPacket::_reqAddToItem_default_instance_._instance,
  &::CKPacket::_resAddToItem_default_instance_._instance,
  &::CKPacket::_reqRemoveFromItem_default_instance_._instance,
  &::CKPacket::_resRemoveFromToItem_default_instance_._instance,
  &::CKPacket::_reqInventoryItems_default_instance_._instance,
  &::CKPacket::_resInventoryItems_default_instance_._instance,
  &::CKPacket::_itemInfo_default_instance_._instance,
  &::CKPacket::_reqShopItemList_default_instance_._instance,
  &::CKPacket::_resShopItemList_default_instance_._instance,
  &::CKPacket::_shopItem_default_instance_._instance,
  &::CKPacket::_reqShopBuy_default_instance_._instance,
  &::CKPacket::_resShopBuy_default_instance_._instance,
  &::CKPacket::_reqShopSell_default_instance_._instance,
  &::CKPacket::_resShopSell_default_instance_._instance,
};

const char descriptor_table_protodef_item_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nitem.proto\022\010CKPacket\"\017\n\rresPlayerJoin\""
  "\t\n\007reqPing\"\t\n\007resPing\"#\n\023reqNotifyPlayer"
  "Name\022\014\n\004name\030\001 \001(\t\"s\n\021reqPlayerPosition\022"
  "\016\n\001x\030\001 \001(\002H\000\210\001\001\022\016\n\001y\030\002 \001(\002H\001\210\001\001\022\016\n\001z\030\003 \001"
  "(\002H\002\210\001\001\022\022\n\005index\030\004 \001(\005H\003\210\001\001B\004\n\002_xB\004\n\002_yB"
  "\004\n\002_zB\010\n\006_index\"s\n\021resPlayerPosition\022\016\n\001"
  "x\030\001 \001(\002H\000\210\001\001\022\016\n\001y\030\002 \001(\002H\001\210\001\001\022\016\n\001z\030\003 \001(\002H"
  "\002\210\001\001\022\022\n\005index\030\004 \001(\005H\003\210\001\001B\004\n\002_xB\004\n\002_yB\004\n\002"
  "_zB\010\n\006_index\"6\n\026resReplicatedPlayerGen\022\022"
  "\n\005index\030\001 \001(\005H\000\210\001\001B\010\n\006_index\"6\n\026resRepli"
  "catedPlayerDes\022\022\n\005index\030\001 \001(\005H\000\210\001\001B\010\n\006_i"
  "ndex\"\030\n\026reqReplicatedPlayerGen\"6\n\026reqRep"
  "licatedPlayerDes\022\022\n\005index\030\001 \001(\005H\000\210\001\001B\010\n\006"
  "_index\"0\n\014reqAddToItem\022 \n\004item\030\001 \001(\0132\022.C"
  "KPacket.itemInfo\"0\n\014resAddToItem\022 \n\004item"
  "\030\001 \001(\0132\022.CKPacket.itemInfo\"5\n\021reqRemoveF"
  "romItem\022 \n\004item\030\001 \001(\0132\022.CKPacket.itemInf"
  "o\"7\n\023resRemoveFromToItem\022 \n\004item\030\001 \001(\0132\022"
  ".CKPacket.itemInfo\"!\n\021reqInventoryItems\022"
  "\014\n\004name\030\001 \001(\t\"6\n\021resInventoryItems\022!\n\005it"
  "ems\030\001 \003(\0132\022.CKPacket.itemInfo\"M\n\010itemInf"
  "o\022\016\n\006itemid\030\001 \001(\005\022\020\n\010itemName\030\002 \001(\t\022\020\n\010i"
  "temDesc\030\003 \001(\t\022\r\n\005count\030\004 \001(\r\"\021\n\017reqShopI"
  "temList\"4\n\017resShopItemList\022!\n\005items\030\001 \003("
  "\0132\022.CKPacket.shopItem\"Q\n\010shopItem\022\016\n\006ite"
  "mId\030\001 \001(\005\022\020\n\010itemName\030\002 \001(\t\022\020\n\010itemDesc\030"
  "\003 \001(\t\022\021\n\titemCount\030\004 \001(\005\"\?\n\nreqShopBuy\022\022"
  "\n\nplayerName\030\001 \001(\t\022\016\n\006itemID\030\002 \001(\005\022\r\n\005co"
  "unt\030\003 \001(\005\"\035\n\nresShopBuy\022\017\n\007success\030\001 \001(\010"
  "\"@\n\013reqShopSell\022\022\n\nplayerName\030\001 \001(\t\022\016\n\006i"
  "temID\030\002 \001(\005\022\r\n\005count\030\003 \001(\005\"\036\n\013resShopSel"
  "l\022\017\n\007success\030\001 \001(\010b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_item_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_item_2eproto = {
    false, false, 1266, descriptor_table_protodef_item_2eproto,
    "item.proto",
    &descriptor_table_item_2eproto_once, nullptr, 0, 24,
    schemas, file_default_instances, TableStruct_item_2eproto::offsets,
    file_level_metadata_item_2eproto, file_level_enum_descriptors_item_2eproto,
    file_level_service_descriptors_item_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_item_2eproto_getter() {
  return &descriptor_table_item_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_item_2eproto(&descriptor_table_item_2eproto);
namespace CKPacket {

// ===================================================================

class resPlayerJoin::_Internal {
 public:
};

resPlayerJoin::resPlayerJoin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CKPacket.resPlayerJoin)
}
resPlayerJoin::resPlayerJoin(const resPlayerJoin& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  resPlayerJoin* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CKPacket.resPlayerJoin)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resPlayerJoin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resPlayerJoin::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata resPlayerJoin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[0]);
}

// ===================================================================

class reqPing::_Internal {
 public:
};

reqPing::reqPing(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqPing)
}
reqPing::reqPing(const reqPing& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  reqPing* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqPing)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqPing::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqPing::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata reqPing::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[1]);
}

// ===================================================================

class resPing::_Internal {
 public:
};

resPing::resPing(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CKPacket.resPing)
}
resPing::resPing(const resPing& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  resPing* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CKPacket.resPing)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resPing::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resPing::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata resPing::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[2]);
}

// ===================================================================

class reqNotifyPlayerName::_Internal {
 public:
};

reqNotifyPlayerName::reqNotifyPlayerName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqNotifyPlayerName)
}
reqNotifyPlayerName::reqNotifyPlayerName(const reqNotifyPlayerName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reqNotifyPlayerName* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqNotifyPlayerName)
}

inline void reqNotifyPlayerName::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

reqNotifyPlayerName::~reqNotifyPlayerName() {
  // @@protoc_insertion_point(destructor:CKPacket.reqNotifyPlayerName)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reqNotifyPlayerName::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void reqNotifyPlayerName::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reqNotifyPlayerName::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.reqNotifyPlayerName)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reqNotifyPlayerName::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CKPacket.reqNotifyPlayerName.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reqNotifyPlayerName::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.reqNotifyPlayerName)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CKPacket.reqNotifyPlayerName.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.reqNotifyPlayerName)
  return target;
}

size_t reqNotifyPlayerName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.reqNotifyPlayerName)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqNotifyPlayerName::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reqNotifyPlayerName::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqNotifyPlayerName::GetClassData() const { return &_class_data_; }


void reqNotifyPlayerName::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reqNotifyPlayerName*>(&to_msg);
  auto& from = static_cast<const reqNotifyPlayerName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.reqNotifyPlayerName)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reqNotifyPlayerName::CopyFrom(const reqNotifyPlayerName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.reqNotifyPlayerName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqNotifyPlayerName::IsInitialized() const {
  return true;
}

void reqNotifyPlayerName::InternalSwap(reqNotifyPlayerName* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata reqNotifyPlayerName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[3]);
}

// ===================================================================

class reqPlayerPosition::_Internal {
 public:
  using HasBits = decltype(std::declval<reqPlayerPosition>()._impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

reqPlayerPosition::reqPlayerPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqPlayerPosition)
}
reqPlayerPosition::reqPlayerPosition(const reqPlayerPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reqPlayerPosition* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , decltype(_impl_.z_){}
    , decltype(_impl_.index_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.x_, &from._impl_.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.index_) -
    reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.index_));
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqPlayerPosition)
}

inline void reqPlayerPosition::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){0}
    , decltype(_impl_.y_){0}
    , decltype(_impl_.z_){0}
    , decltype(_impl_.index_){0}
  };
}

reqPlayerPosition::~reqPlayerPosition() {
  // @@protoc_insertion_point(destructor:CKPacket.reqPlayerPosition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reqPlayerPosition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void reqPlayerPosition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reqPlayerPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.reqPlayerPosition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.index_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.index_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reqPlayerPosition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _Internal::set_has_x(&has_bits);
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_y(&has_bits);
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _Internal::set_has_z(&has_bits);
          _impl_.z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional int32 index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_index(&has_bits);
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reqPlayerPosition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.reqPlayerPosition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional float x = 1;
  if (_internal_has_x()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // optional float y = 2;
  if (_internal_has_y()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // optional float z = 3;
  if (_internal_has_z()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  // optional int32 index = 4;
  if (_internal_has_index()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.reqPlayerPosition)
  return target;
}

size_t reqPlayerPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.reqPlayerPosition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional float x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional int32 index = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqPlayerPosition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reqPlayerPosition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqPlayerPosition::GetClassData() const { return &_class_data_; }


void reqPlayerPosition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reqPlayerPosition*>(&to_msg);
  auto& from = static_cast<const reqPlayerPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.reqPlayerPosition)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.index_ = from._impl_.index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reqPlayerPosition::CopyFrom(const reqPlayerPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.reqPlayerPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqPlayerPosition::IsInitialized() const {
  return true;
}

void reqPlayerPosition::InternalSwap(reqPlayerPosition* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(reqPlayerPosition, _impl_.index_)
      + sizeof(reqPlayerPosition::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(reqPlayerPosition, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata reqPlayerPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[4]);
}

// ===================================================================

class resPlayerPosition::_Internal {
 public:
  using HasBits = decltype(std::declval<resPlayerPosition>()._impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

resPlayerPosition::resPlayerPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resPlayerPosition)
}
resPlayerPosition::resPlayerPosition(const resPlayerPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resPlayerPosition* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , decltype(_impl_.z_){}
    , decltype(_impl_.index_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.x_, &from._impl_.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.index_) -
    reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.index_));
  // @@protoc_insertion_point(copy_constructor:CKPacket.resPlayerPosition)
}

inline void resPlayerPosition::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.x_){0}
    , decltype(_impl_.y_){0}
    , decltype(_impl_.z_){0}
    , decltype(_impl_.index_){0}
  };
}

resPlayerPosition::~resPlayerPosition() {
  // @@protoc_insertion_point(destructor:CKPacket.resPlayerPosition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resPlayerPosition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void resPlayerPosition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resPlayerPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resPlayerPosition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.index_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.index_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resPlayerPosition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _Internal::set_has_x(&has_bits);
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_y(&has_bits);
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _Internal::set_has_z(&has_bits);
          _impl_.z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional int32 index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_index(&has_bits);
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resPlayerPosition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resPlayerPosition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional float x = 1;
  if (_internal_has_x()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // optional float y = 2;
  if (_internal_has_y()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // optional float z = 3;
  if (_internal_has_z()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  // optional int32 index = 4;
  if (_internal_has_index()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resPlayerPosition)
  return target;
}

size_t resPlayerPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resPlayerPosition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional float x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional int32 index = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resPlayerPosition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resPlayerPosition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resPlayerPosition::GetClassData() const { return &_class_data_; }


void resPlayerPosition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resPlayerPosition*>(&to_msg);
  auto& from = static_cast<const resPlayerPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resPlayerPosition)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.index_ = from._impl_.index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resPlayerPosition::CopyFrom(const resPlayerPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resPlayerPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resPlayerPosition::IsInitialized() const {
  return true;
}

void resPlayerPosition::InternalSwap(resPlayerPosition* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(resPlayerPosition, _impl_.index_)
      + sizeof(resPlayerPosition::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(resPlayerPosition, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata resPlayerPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[5]);
}

// ===================================================================

class resReplicatedPlayerGen::_Internal {
 public:
  using HasBits = decltype(std::declval<resReplicatedPlayerGen>()._impl_._has_bits_);
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

resReplicatedPlayerGen::resReplicatedPlayerGen(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resReplicatedPlayerGen)
}
resReplicatedPlayerGen::resReplicatedPlayerGen(const resReplicatedPlayerGen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resReplicatedPlayerGen* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:CKPacket.resReplicatedPlayerGen)
}

inline void resReplicatedPlayerGen::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){0}
  };
}

resReplicatedPlayerGen::~resReplicatedPlayerGen() {
  // @@protoc_insertion_point(destructor:CKPacket.resReplicatedPlayerGen)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resReplicatedPlayerGen::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void resReplicatedPlayerGen::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resReplicatedPlayerGen::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resReplicatedPlayerGen)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resReplicatedPlayerGen::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_index(&has_bits);
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resReplicatedPlayerGen::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resReplicatedPlayerGen)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 index = 1;
  if (_internal_has_index()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resReplicatedPlayerGen)
  return target;
}

size_t resReplicatedPlayerGen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resReplicatedPlayerGen)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 index = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resReplicatedPlayerGen::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resReplicatedPlayerGen::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resReplicatedPlayerGen::GetClassData() const { return &_class_data_; }


void resReplicatedPlayerGen::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resReplicatedPlayerGen*>(&to_msg);
  auto& from = static_cast<const resReplicatedPlayerGen&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resReplicatedPlayerGen)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_index()) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resReplicatedPlayerGen::CopyFrom(const resReplicatedPlayerGen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resReplicatedPlayerGen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resReplicatedPlayerGen::IsInitialized() const {
  return true;
}

void resReplicatedPlayerGen::InternalSwap(resReplicatedPlayerGen* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata resReplicatedPlayerGen::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[6]);
}

// ===================================================================

class resReplicatedPlayerDes::_Internal {
 public:
  using HasBits = decltype(std::declval<resReplicatedPlayerDes>()._impl_._has_bits_);
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

resReplicatedPlayerDes::resReplicatedPlayerDes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resReplicatedPlayerDes)
}
resReplicatedPlayerDes::resReplicatedPlayerDes(const resReplicatedPlayerDes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resReplicatedPlayerDes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:CKPacket.resReplicatedPlayerDes)
}

inline void resReplicatedPlayerDes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){0}
  };
}

resReplicatedPlayerDes::~resReplicatedPlayerDes() {
  // @@protoc_insertion_point(destructor:CKPacket.resReplicatedPlayerDes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resReplicatedPlayerDes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void resReplicatedPlayerDes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resReplicatedPlayerDes::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resReplicatedPlayerDes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resReplicatedPlayerDes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_index(&has_bits);
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resReplicatedPlayerDes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resReplicatedPlayerDes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 index = 1;
  if (_internal_has_index()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resReplicatedPlayerDes)
  return target;
}

size_t resReplicatedPlayerDes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resReplicatedPlayerDes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 index = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resReplicatedPlayerDes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resReplicatedPlayerDes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resReplicatedPlayerDes::GetClassData() const { return &_class_data_; }


void resReplicatedPlayerDes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resReplicatedPlayerDes*>(&to_msg);
  auto& from = static_cast<const resReplicatedPlayerDes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resReplicatedPlayerDes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_index()) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resReplicatedPlayerDes::CopyFrom(const resReplicatedPlayerDes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resReplicatedPlayerDes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resReplicatedPlayerDes::IsInitialized() const {
  return true;
}

void resReplicatedPlayerDes::InternalSwap(resReplicatedPlayerDes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata resReplicatedPlayerDes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[7]);
}

// ===================================================================

class reqReplicatedPlayerGen::_Internal {
 public:
};

reqReplicatedPlayerGen::reqReplicatedPlayerGen(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqReplicatedPlayerGen)
}
reqReplicatedPlayerGen::reqReplicatedPlayerGen(const reqReplicatedPlayerGen& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  reqReplicatedPlayerGen* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqReplicatedPlayerGen)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqReplicatedPlayerGen::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqReplicatedPlayerGen::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata reqReplicatedPlayerGen::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[8]);
}

// ===================================================================

class reqReplicatedPlayerDes::_Internal {
 public:
  using HasBits = decltype(std::declval<reqReplicatedPlayerDes>()._impl_._has_bits_);
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

reqReplicatedPlayerDes::reqReplicatedPlayerDes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqReplicatedPlayerDes)
}
reqReplicatedPlayerDes::reqReplicatedPlayerDes(const reqReplicatedPlayerDes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reqReplicatedPlayerDes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqReplicatedPlayerDes)
}

inline void reqReplicatedPlayerDes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.index_){0}
  };
}

reqReplicatedPlayerDes::~reqReplicatedPlayerDes() {
  // @@protoc_insertion_point(destructor:CKPacket.reqReplicatedPlayerDes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reqReplicatedPlayerDes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void reqReplicatedPlayerDes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reqReplicatedPlayerDes::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.reqReplicatedPlayerDes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reqReplicatedPlayerDes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_index(&has_bits);
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reqReplicatedPlayerDes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.reqReplicatedPlayerDes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 index = 1;
  if (_internal_has_index()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.reqReplicatedPlayerDes)
  return target;
}

size_t reqReplicatedPlayerDes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.reqReplicatedPlayerDes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 index = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqReplicatedPlayerDes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reqReplicatedPlayerDes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqReplicatedPlayerDes::GetClassData() const { return &_class_data_; }


void reqReplicatedPlayerDes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reqReplicatedPlayerDes*>(&to_msg);
  auto& from = static_cast<const reqReplicatedPlayerDes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.reqReplicatedPlayerDes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_index()) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reqReplicatedPlayerDes::CopyFrom(const reqReplicatedPlayerDes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.reqReplicatedPlayerDes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqReplicatedPlayerDes::IsInitialized() const {
  return true;
}

void reqReplicatedPlayerDes::InternalSwap(reqReplicatedPlayerDes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata reqReplicatedPlayerDes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[9]);
}

// ===================================================================

class reqAddToItem::_Internal {
 public:
  static const ::CKPacket::itemInfo& item(const reqAddToItem* msg);
};

const ::CKPacket::itemInfo&
reqAddToItem::_Internal::item(const reqAddToItem* msg) {
  return *msg->_impl_.item_;
}
reqAddToItem::reqAddToItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqAddToItem)
}
reqAddToItem::reqAddToItem(const reqAddToItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reqAddToItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::CKPacket::itemInfo(*from._impl_.item_);
  }
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqAddToItem)
}

inline void reqAddToItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

reqAddToItem::~reqAddToItem() {
  // @@protoc_insertion_point(destructor:CKPacket.reqAddToItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reqAddToItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void reqAddToItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reqAddToItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.reqAddToItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reqAddToItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CKPacket.itemInfo item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reqAddToItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.reqAddToItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .CKPacket.itemInfo item = 1;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.reqAddToItem)
  return target;
}

size_t reqAddToItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.reqAddToItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CKPacket.itemInfo item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqAddToItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reqAddToItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqAddToItem::GetClassData() const { return &_class_data_; }


void reqAddToItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reqAddToItem*>(&to_msg);
  auto& from = static_cast<const reqAddToItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.reqAddToItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::CKPacket::itemInfo::MergeFrom(
        from._internal_item());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reqAddToItem::CopyFrom(const reqAddToItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.reqAddToItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqAddToItem::IsInitialized() const {
  return true;
}

void reqAddToItem::InternalSwap(reqAddToItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.item_, other->_impl_.item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata reqAddToItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[10]);
}

// ===================================================================

class resAddToItem::_Internal {
 public:
  static const ::CKPacket::itemInfo& item(const resAddToItem* msg);
};

const ::CKPacket::itemInfo&
resAddToItem::_Internal::item(const resAddToItem* msg) {
  return *msg->_impl_.item_;
}
resAddToItem::resAddToItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resAddToItem)
}
resAddToItem::resAddToItem(const resAddToItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resAddToItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::CKPacket::itemInfo(*from._impl_.item_);
  }
  // @@protoc_insertion_point(copy_constructor:CKPacket.resAddToItem)
}

inline void resAddToItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

resAddToItem::~resAddToItem() {
  // @@protoc_insertion_point(destructor:CKPacket.resAddToItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resAddToItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void resAddToItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resAddToItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resAddToItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resAddToItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CKPacket.itemInfo item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resAddToItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resAddToItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .CKPacket.itemInfo item = 1;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resAddToItem)
  return target;
}

size_t resAddToItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resAddToItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CKPacket.itemInfo item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resAddToItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resAddToItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resAddToItem::GetClassData() const { return &_class_data_; }


void resAddToItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resAddToItem*>(&to_msg);
  auto& from = static_cast<const resAddToItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resAddToItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::CKPacket::itemInfo::MergeFrom(
        from._internal_item());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resAddToItem::CopyFrom(const resAddToItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resAddToItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resAddToItem::IsInitialized() const {
  return true;
}

void resAddToItem::InternalSwap(resAddToItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.item_, other->_impl_.item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata resAddToItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[11]);
}

// ===================================================================

class reqRemoveFromItem::_Internal {
 public:
  static const ::CKPacket::itemInfo& item(const reqRemoveFromItem* msg);
};

const ::CKPacket::itemInfo&
reqRemoveFromItem::_Internal::item(const reqRemoveFromItem* msg) {
  return *msg->_impl_.item_;
}
reqRemoveFromItem::reqRemoveFromItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqRemoveFromItem)
}
reqRemoveFromItem::reqRemoveFromItem(const reqRemoveFromItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reqRemoveFromItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::CKPacket::itemInfo(*from._impl_.item_);
  }
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqRemoveFromItem)
}

inline void reqRemoveFromItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

reqRemoveFromItem::~reqRemoveFromItem() {
  // @@protoc_insertion_point(destructor:CKPacket.reqRemoveFromItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reqRemoveFromItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void reqRemoveFromItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reqRemoveFromItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.reqRemoveFromItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reqRemoveFromItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CKPacket.itemInfo item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reqRemoveFromItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.reqRemoveFromItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .CKPacket.itemInfo item = 1;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.reqRemoveFromItem)
  return target;
}

size_t reqRemoveFromItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.reqRemoveFromItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CKPacket.itemInfo item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqRemoveFromItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reqRemoveFromItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqRemoveFromItem::GetClassData() const { return &_class_data_; }


void reqRemoveFromItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reqRemoveFromItem*>(&to_msg);
  auto& from = static_cast<const reqRemoveFromItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.reqRemoveFromItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::CKPacket::itemInfo::MergeFrom(
        from._internal_item());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reqRemoveFromItem::CopyFrom(const reqRemoveFromItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.reqRemoveFromItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqRemoveFromItem::IsInitialized() const {
  return true;
}

void reqRemoveFromItem::InternalSwap(reqRemoveFromItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.item_, other->_impl_.item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata reqRemoveFromItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[12]);
}

// ===================================================================

class resRemoveFromToItem::_Internal {
 public:
  static const ::CKPacket::itemInfo& item(const resRemoveFromToItem* msg);
};

const ::CKPacket::itemInfo&
resRemoveFromToItem::_Internal::item(const resRemoveFromToItem* msg) {
  return *msg->_impl_.item_;
}
resRemoveFromToItem::resRemoveFromToItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resRemoveFromToItem)
}
resRemoveFromToItem::resRemoveFromToItem(const resRemoveFromToItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resRemoveFromToItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::CKPacket::itemInfo(*from._impl_.item_);
  }
  // @@protoc_insertion_point(copy_constructor:CKPacket.resRemoveFromToItem)
}

inline void resRemoveFromToItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

resRemoveFromToItem::~resRemoveFromToItem() {
  // @@protoc_insertion_point(destructor:CKPacket.resRemoveFromToItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resRemoveFromToItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void resRemoveFromToItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resRemoveFromToItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resRemoveFromToItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resRemoveFromToItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CKPacket.itemInfo item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resRemoveFromToItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resRemoveFromToItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .CKPacket.itemInfo item = 1;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resRemoveFromToItem)
  return target;
}

size_t resRemoveFromToItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resRemoveFromToItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CKPacket.itemInfo item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resRemoveFromToItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resRemoveFromToItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resRemoveFromToItem::GetClassData() const { return &_class_data_; }


void resRemoveFromToItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resRemoveFromToItem*>(&to_msg);
  auto& from = static_cast<const resRemoveFromToItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resRemoveFromToItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::CKPacket::itemInfo::MergeFrom(
        from._internal_item());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resRemoveFromToItem::CopyFrom(const resRemoveFromToItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resRemoveFromToItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resRemoveFromToItem::IsInitialized() const {
  return true;
}

void resRemoveFromToItem::InternalSwap(resRemoveFromToItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.item_, other->_impl_.item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata resRemoveFromToItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[13]);
}

// ===================================================================

class reqInventoryItems::_Internal {
 public:
};

reqInventoryItems::reqInventoryItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqInventoryItems)
}
reqInventoryItems::reqInventoryItems(const reqInventoryItems& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reqInventoryItems* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqInventoryItems)
}

inline void reqInventoryItems::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

reqInventoryItems::~reqInventoryItems() {
  // @@protoc_insertion_point(destructor:CKPacket.reqInventoryItems)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reqInventoryItems::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void reqInventoryItems::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reqInventoryItems::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.reqInventoryItems)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reqInventoryItems::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CKPacket.reqInventoryItems.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reqInventoryItems::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.reqInventoryItems)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CKPacket.reqInventoryItems.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.reqInventoryItems)
  return target;
}

size_t reqInventoryItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.reqInventoryItems)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqInventoryItems::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reqInventoryItems::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqInventoryItems::GetClassData() const { return &_class_data_; }


void reqInventoryItems::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reqInventoryItems*>(&to_msg);
  auto& from = static_cast<const reqInventoryItems&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.reqInventoryItems)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reqInventoryItems::CopyFrom(const reqInventoryItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.reqInventoryItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqInventoryItems::IsInitialized() const {
  return true;
}

void reqInventoryItems::InternalSwap(reqInventoryItems* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata reqInventoryItems::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[14]);
}

// ===================================================================

class resInventoryItems::_Internal {
 public:
};

resInventoryItems::resInventoryItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resInventoryItems)
}
resInventoryItems::resInventoryItems(const resInventoryItems& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resInventoryItems* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CKPacket.resInventoryItems)
}

inline void resInventoryItems::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

resInventoryItems::~resInventoryItems() {
  // @@protoc_insertion_point(destructor:CKPacket.resInventoryItems)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resInventoryItems::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void resInventoryItems::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resInventoryItems::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resInventoryItems)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resInventoryItems::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CKPacket.itemInfo items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resInventoryItems::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resInventoryItems)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CKPacket.itemInfo items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resInventoryItems)
  return target;
}

size_t resInventoryItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resInventoryItems)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CKPacket.itemInfo items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resInventoryItems::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resInventoryItems::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resInventoryItems::GetClassData() const { return &_class_data_; }


void resInventoryItems::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resInventoryItems*>(&to_msg);
  auto& from = static_cast<const resInventoryItems&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resInventoryItems)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resInventoryItems::CopyFrom(const resInventoryItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resInventoryItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resInventoryItems::IsInitialized() const {
  return true;
}

void resInventoryItems::InternalSwap(resInventoryItems* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata resInventoryItems::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[15]);
}

// ===================================================================

class itemInfo::_Internal {
 public:
};

itemInfo::itemInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.itemInfo)
}
itemInfo::itemInfo(const itemInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  itemInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.itemname_){}
    , decltype(_impl_.itemdesc_){}
    , decltype(_impl_.itemid_){}
    , decltype(_impl_.count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.itemname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.itemname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_itemname().empty()) {
    _this->_impl_.itemname_.Set(from._internal_itemname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.itemdesc_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.itemdesc_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_itemdesc().empty()) {
    _this->_impl_.itemdesc_.Set(from._internal_itemdesc(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.itemid_, &from._impl_.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.count_) -
    reinterpret_cast<char*>(&_impl_.itemid_)) + sizeof(_impl_.count_));
  // @@protoc_insertion_point(copy_constructor:CKPacket.itemInfo)
}

inline void itemInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.itemname_){}
    , decltype(_impl_.itemdesc_){}
    , decltype(_impl_.itemid_){0}
    , decltype(_impl_.count_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.itemname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.itemname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.itemdesc_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.itemdesc_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

itemInfo::~itemInfo() {
  // @@protoc_insertion_point(destructor:CKPacket.itemInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void itemInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.itemname_.Destroy();
  _impl_.itemdesc_.Destroy();
}

void itemInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void itemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.itemInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.itemname_.ClearToEmpty();
  _impl_.itemdesc_.ClearToEmpty();
  ::memset(&_impl_.itemid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.count_) -
      reinterpret_cast<char*>(&_impl_.itemid_)) + sizeof(_impl_.count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* itemInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 itemid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.itemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string itemName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_itemname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CKPacket.itemInfo.itemName"));
        } else
          goto handle_unusual;
        continue;
      // string itemDesc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_itemdesc();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CKPacket.itemInfo.itemDesc"));
        } else
          goto handle_unusual;
        continue;
      // uint32 count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* itemInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.itemInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 itemid = 1;
  if (this->_internal_itemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_itemid(), target);
  }

  // string itemName = 2;
  if (!this->_internal_itemname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_itemname().data(), static_cast<int>(this->_internal_itemname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CKPacket.itemInfo.itemName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_itemname(), target);
  }

  // string itemDesc = 3;
  if (!this->_internal_itemdesc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_itemdesc().data(), static_cast<int>(this->_internal_itemdesc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CKPacket.itemInfo.itemDesc");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_itemdesc(), target);
  }

  // uint32 count = 4;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.itemInfo)
  return target;
}

size_t itemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.itemInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string itemName = 2;
  if (!this->_internal_itemname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_itemname());
  }

  // string itemDesc = 3;
  if (!this->_internal_itemdesc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_itemdesc());
  }

  // int32 itemid = 1;
  if (this->_internal_itemid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_itemid());
  }

  // uint32 count = 4;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData itemInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    itemInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*itemInfo::GetClassData() const { return &_class_data_; }


void itemInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<itemInfo*>(&to_msg);
  auto& from = static_cast<const itemInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.itemInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_itemname().empty()) {
    _this->_internal_set_itemname(from._internal_itemname());
  }
  if (!from._internal_itemdesc().empty()) {
    _this->_internal_set_itemdesc(from._internal_itemdesc());
  }
  if (from._internal_itemid() != 0) {
    _this->_internal_set_itemid(from._internal_itemid());
  }
  if (from._internal_count() != 0) {
    _this->_internal_set_count(from._internal_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void itemInfo::CopyFrom(const itemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.itemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool itemInfo::IsInitialized() const {
  return true;
}

void itemInfo::InternalSwap(itemInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.itemname_, lhs_arena,
      &other->_impl_.itemname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.itemdesc_, lhs_arena,
      &other->_impl_.itemdesc_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(itemInfo, _impl_.count_)
      + sizeof(itemInfo::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(itemInfo, _impl_.itemid_)>(
          reinterpret_cast<char*>(&_impl_.itemid_),
          reinterpret_cast<char*>(&other->_impl_.itemid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata itemInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[16]);
}

// ===================================================================

class reqShopItemList::_Internal {
 public:
};

reqShopItemList::reqShopItemList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqShopItemList)
}
reqShopItemList::reqShopItemList(const reqShopItemList& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  reqShopItemList* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqShopItemList)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqShopItemList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqShopItemList::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata reqShopItemList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[17]);
}

// ===================================================================

class resShopItemList::_Internal {
 public:
};

resShopItemList::resShopItemList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resShopItemList)
}
resShopItemList::resShopItemList(const resShopItemList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resShopItemList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CKPacket.resShopItemList)
}

inline void resShopItemList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

resShopItemList::~resShopItemList() {
  // @@protoc_insertion_point(destructor:CKPacket.resShopItemList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resShopItemList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void resShopItemList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resShopItemList::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resShopItemList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resShopItemList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CKPacket.shopItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resShopItemList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resShopItemList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CKPacket.shopItem items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resShopItemList)
  return target;
}

size_t resShopItemList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resShopItemList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CKPacket.shopItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resShopItemList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resShopItemList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resShopItemList::GetClassData() const { return &_class_data_; }


void resShopItemList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resShopItemList*>(&to_msg);
  auto& from = static_cast<const resShopItemList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resShopItemList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resShopItemList::CopyFrom(const resShopItemList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resShopItemList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resShopItemList::IsInitialized() const {
  return true;
}

void resShopItemList::InternalSwap(resShopItemList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata resShopItemList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[18]);
}

// ===================================================================

class shopItem::_Internal {
 public:
};

shopItem::shopItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.shopItem)
}
shopItem::shopItem(const shopItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  shopItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.itemname_){}
    , decltype(_impl_.itemdesc_){}
    , decltype(_impl_.itemid_){}
    , decltype(_impl_.itemcount_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.itemname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.itemname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_itemname().empty()) {
    _this->_impl_.itemname_.Set(from._internal_itemname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.itemdesc_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.itemdesc_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_itemdesc().empty()) {
    _this->_impl_.itemdesc_.Set(from._internal_itemdesc(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.itemid_, &from._impl_.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.itemcount_) -
    reinterpret_cast<char*>(&_impl_.itemid_)) + sizeof(_impl_.itemcount_));
  // @@protoc_insertion_point(copy_constructor:CKPacket.shopItem)
}

inline void shopItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.itemname_){}
    , decltype(_impl_.itemdesc_){}
    , decltype(_impl_.itemid_){0}
    , decltype(_impl_.itemcount_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.itemname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.itemname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.itemdesc_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.itemdesc_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

shopItem::~shopItem() {
  // @@protoc_insertion_point(destructor:CKPacket.shopItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void shopItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.itemname_.Destroy();
  _impl_.itemdesc_.Destroy();
}

void shopItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void shopItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.shopItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.itemname_.ClearToEmpty();
  _impl_.itemdesc_.ClearToEmpty();
  ::memset(&_impl_.itemid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.itemcount_) -
      reinterpret_cast<char*>(&_impl_.itemid_)) + sizeof(_impl_.itemcount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* shopItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 itemId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.itemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string itemName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_itemname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CKPacket.shopItem.itemName"));
        } else
          goto handle_unusual;
        continue;
      // string itemDesc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_itemdesc();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CKPacket.shopItem.itemDesc"));
        } else
          goto handle_unusual;
        continue;
      // int32 itemCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.itemcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* shopItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.shopItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 itemId = 1;
  if (this->_internal_itemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_itemid(), target);
  }

  // string itemName = 2;
  if (!this->_internal_itemname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_itemname().data(), static_cast<int>(this->_internal_itemname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CKPacket.shopItem.itemName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_itemname(), target);
  }

  // string itemDesc = 3;
  if (!this->_internal_itemdesc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_itemdesc().data(), static_cast<int>(this->_internal_itemdesc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CKPacket.shopItem.itemDesc");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_itemdesc(), target);
  }

  // int32 itemCount = 4;
  if (this->_internal_itemcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_itemcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.shopItem)
  return target;
}

size_t shopItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.shopItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string itemName = 2;
  if (!this->_internal_itemname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_itemname());
  }

  // string itemDesc = 3;
  if (!this->_internal_itemdesc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_itemdesc());
  }

  // int32 itemId = 1;
  if (this->_internal_itemid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_itemid());
  }

  // int32 itemCount = 4;
  if (this->_internal_itemcount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_itemcount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData shopItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    shopItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*shopItem::GetClassData() const { return &_class_data_; }


void shopItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<shopItem*>(&to_msg);
  auto& from = static_cast<const shopItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.shopItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_itemname().empty()) {
    _this->_internal_set_itemname(from._internal_itemname());
  }
  if (!from._internal_itemdesc().empty()) {
    _this->_internal_set_itemdesc(from._internal_itemdesc());
  }
  if (from._internal_itemid() != 0) {
    _this->_internal_set_itemid(from._internal_itemid());
  }
  if (from._internal_itemcount() != 0) {
    _this->_internal_set_itemcount(from._internal_itemcount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void shopItem::CopyFrom(const shopItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.shopItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool shopItem::IsInitialized() const {
  return true;
}

void shopItem::InternalSwap(shopItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.itemname_, lhs_arena,
      &other->_impl_.itemname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.itemdesc_, lhs_arena,
      &other->_impl_.itemdesc_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(shopItem, _impl_.itemcount_)
      + sizeof(shopItem::_impl_.itemcount_)
      - PROTOBUF_FIELD_OFFSET(shopItem, _impl_.itemid_)>(
          reinterpret_cast<char*>(&_impl_.itemid_),
          reinterpret_cast<char*>(&other->_impl_.itemid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata shopItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[19]);
}

// ===================================================================

class reqShopBuy::_Internal {
 public:
};

reqShopBuy::reqShopBuy(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqShopBuy)
}
reqShopBuy::reqShopBuy(const reqShopBuy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reqShopBuy* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.playername_){}
    , decltype(_impl_.itemid_){}
    , decltype(_impl_.count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.playername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.playername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_playername().empty()) {
    _this->_impl_.playername_.Set(from._internal_playername(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.itemid_, &from._impl_.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.count_) -
    reinterpret_cast<char*>(&_impl_.itemid_)) + sizeof(_impl_.count_));
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqShopBuy)
}

inline void reqShopBuy::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.playername_){}
    , decltype(_impl_.itemid_){0}
    , decltype(_impl_.count_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.playername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.playername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

reqShopBuy::~reqShopBuy() {
  // @@protoc_insertion_point(destructor:CKPacket.reqShopBuy)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reqShopBuy::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.playername_.Destroy();
}

void reqShopBuy::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reqShopBuy::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.reqShopBuy)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playername_.ClearToEmpty();
  ::memset(&_impl_.itemid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.count_) -
      reinterpret_cast<char*>(&_impl_.itemid_)) + sizeof(_impl_.count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reqShopBuy::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string playerName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_playername();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CKPacket.reqShopBuy.playerName"));
        } else
          goto handle_unusual;
        continue;
      // int32 itemID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.itemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reqShopBuy::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.reqShopBuy)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string playerName = 1;
  if (!this->_internal_playername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_playername().data(), static_cast<int>(this->_internal_playername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CKPacket.reqShopBuy.playerName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_playername(), target);
  }

  // int32 itemID = 2;
  if (this->_internal_itemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_itemid(), target);
  }

  // int32 count = 3;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.reqShopBuy)
  return target;
}

size_t reqShopBuy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.reqShopBuy)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string playerName = 1;
  if (!this->_internal_playername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_playername());
  }

  // int32 itemID = 2;
  if (this->_internal_itemid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_itemid());
  }

  // int32 count = 3;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqShopBuy::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reqShopBuy::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqShopBuy::GetClassData() const { return &_class_data_; }


void reqShopBuy::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reqShopBuy*>(&to_msg);
  auto& from = static_cast<const reqShopBuy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.reqShopBuy)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_playername().empty()) {
    _this->_internal_set_playername(from._internal_playername());
  }
  if (from._internal_itemid() != 0) {
    _this->_internal_set_itemid(from._internal_itemid());
  }
  if (from._internal_count() != 0) {
    _this->_internal_set_count(from._internal_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reqShopBuy::CopyFrom(const reqShopBuy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.reqShopBuy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqShopBuy::IsInitialized() const {
  return true;
}

void reqShopBuy::InternalSwap(reqShopBuy* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.playername_, lhs_arena,
      &other->_impl_.playername_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(reqShopBuy, _impl_.count_)
      + sizeof(reqShopBuy::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(reqShopBuy, _impl_.itemid_)>(
          reinterpret_cast<char*>(&_impl_.itemid_),
          reinterpret_cast<char*>(&other->_impl_.itemid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata reqShopBuy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[20]);
}

// ===================================================================

class resShopBuy::_Internal {
 public:
};

resShopBuy::resShopBuy(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resShopBuy)
}
resShopBuy::resShopBuy(const resShopBuy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resShopBuy* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:CKPacket.resShopBuy)
}

inline void resShopBuy::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

resShopBuy::~resShopBuy() {
  // @@protoc_insertion_point(destructor:CKPacket.resShopBuy)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resShopBuy::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void resShopBuy::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resShopBuy::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resShopBuy)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resShopBuy::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resShopBuy::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resShopBuy)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resShopBuy)
  return target;
}

size_t resShopBuy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resShopBuy)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resShopBuy::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resShopBuy::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resShopBuy::GetClassData() const { return &_class_data_; }


void resShopBuy::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resShopBuy*>(&to_msg);
  auto& from = static_cast<const resShopBuy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resShopBuy)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resShopBuy::CopyFrom(const resShopBuy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resShopBuy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resShopBuy::IsInitialized() const {
  return true;
}

void resShopBuy::InternalSwap(resShopBuy* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata resShopBuy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[21]);
}

// ===================================================================

class reqShopSell::_Internal {
 public:
};

reqShopSell::reqShopSell(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.reqShopSell)
}
reqShopSell::reqShopSell(const reqShopSell& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reqShopSell* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.playername_){}
    , decltype(_impl_.itemid_){}
    , decltype(_impl_.count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.playername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.playername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_playername().empty()) {
    _this->_impl_.playername_.Set(from._internal_playername(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.itemid_, &from._impl_.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.count_) -
    reinterpret_cast<char*>(&_impl_.itemid_)) + sizeof(_impl_.count_));
  // @@protoc_insertion_point(copy_constructor:CKPacket.reqShopSell)
}

inline void reqShopSell::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.playername_){}
    , decltype(_impl_.itemid_){0}
    , decltype(_impl_.count_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.playername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.playername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

reqShopSell::~reqShopSell() {
  // @@protoc_insertion_point(destructor:CKPacket.reqShopSell)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reqShopSell::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.playername_.Destroy();
}

void reqShopSell::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reqShopSell::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.reqShopSell)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playername_.ClearToEmpty();
  ::memset(&_impl_.itemid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.count_) -
      reinterpret_cast<char*>(&_impl_.itemid_)) + sizeof(_impl_.count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reqShopSell::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string playerName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_playername();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CKPacket.reqShopSell.playerName"));
        } else
          goto handle_unusual;
        continue;
      // int32 itemID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.itemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reqShopSell::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.reqShopSell)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string playerName = 1;
  if (!this->_internal_playername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_playername().data(), static_cast<int>(this->_internal_playername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CKPacket.reqShopSell.playerName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_playername(), target);
  }

  // int32 itemID = 2;
  if (this->_internal_itemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_itemid(), target);
  }

  // int32 count = 3;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.reqShopSell)
  return target;
}

size_t reqShopSell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.reqShopSell)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string playerName = 1;
  if (!this->_internal_playername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_playername());
  }

  // int32 itemID = 2;
  if (this->_internal_itemid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_itemid());
  }

  // int32 count = 3;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reqShopSell::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reqShopSell::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reqShopSell::GetClassData() const { return &_class_data_; }


void reqShopSell::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reqShopSell*>(&to_msg);
  auto& from = static_cast<const reqShopSell&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.reqShopSell)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_playername().empty()) {
    _this->_internal_set_playername(from._internal_playername());
  }
  if (from._internal_itemid() != 0) {
    _this->_internal_set_itemid(from._internal_itemid());
  }
  if (from._internal_count() != 0) {
    _this->_internal_set_count(from._internal_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reqShopSell::CopyFrom(const reqShopSell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.reqShopSell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reqShopSell::IsInitialized() const {
  return true;
}

void reqShopSell::InternalSwap(reqShopSell* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.playername_, lhs_arena,
      &other->_impl_.playername_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(reqShopSell, _impl_.count_)
      + sizeof(reqShopSell::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(reqShopSell, _impl_.itemid_)>(
          reinterpret_cast<char*>(&_impl_.itemid_),
          reinterpret_cast<char*>(&other->_impl_.itemid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata reqShopSell::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[22]);
}

// ===================================================================

class resShopSell::_Internal {
 public:
};

resShopSell::resShopSell(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CKPacket.resShopSell)
}
resShopSell::resShopSell(const resShopSell& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  resShopSell* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:CKPacket.resShopSell)
}

inline void resShopSell::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

resShopSell::~resShopSell() {
  // @@protoc_insertion_point(destructor:CKPacket.resShopSell)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void resShopSell::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void resShopSell::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void resShopSell::Clear() {
// @@protoc_insertion_point(message_clear_start:CKPacket.resShopSell)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* resShopSell::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* resShopSell::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CKPacket.resShopSell)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CKPacket.resShopSell)
  return target;
}

size_t resShopSell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CKPacket.resShopSell)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData resShopSell::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    resShopSell::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*resShopSell::GetClassData() const { return &_class_data_; }


void resShopSell::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<resShopSell*>(&to_msg);
  auto& from = static_cast<const resShopSell&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CKPacket.resShopSell)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void resShopSell::CopyFrom(const resShopSell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CKPacket.resShopSell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool resShopSell::IsInitialized() const {
  return true;
}

void resShopSell::InternalSwap(resShopSell* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata resShopSell::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[23]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace CKPacket
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CKPacket::resPlayerJoin*
Arena::CreateMaybeMessage< ::CKPacket::resPlayerJoin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resPlayerJoin >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqPing*
Arena::CreateMaybeMessage< ::CKPacket::reqPing >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqPing >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resPing*
Arena::CreateMaybeMessage< ::CKPacket::resPing >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resPing >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqNotifyPlayerName*
Arena::CreateMaybeMessage< ::CKPacket::reqNotifyPlayerName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqNotifyPlayerName >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqPlayerPosition*
Arena::CreateMaybeMessage< ::CKPacket::reqPlayerPosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqPlayerPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resPlayerPosition*
Arena::CreateMaybeMessage< ::CKPacket::resPlayerPosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resPlayerPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resReplicatedPlayerGen*
Arena::CreateMaybeMessage< ::CKPacket::resReplicatedPlayerGen >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resReplicatedPlayerGen >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resReplicatedPlayerDes*
Arena::CreateMaybeMessage< ::CKPacket::resReplicatedPlayerDes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resReplicatedPlayerDes >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqReplicatedPlayerGen*
Arena::CreateMaybeMessage< ::CKPacket::reqReplicatedPlayerGen >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqReplicatedPlayerGen >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqReplicatedPlayerDes*
Arena::CreateMaybeMessage< ::CKPacket::reqReplicatedPlayerDes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqReplicatedPlayerDes >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqAddToItem*
Arena::CreateMaybeMessage< ::CKPacket::reqAddToItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqAddToItem >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resAddToItem*
Arena::CreateMaybeMessage< ::CKPacket::resAddToItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resAddToItem >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqRemoveFromItem*
Arena::CreateMaybeMessage< ::CKPacket::reqRemoveFromItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqRemoveFromItem >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resRemoveFromToItem*
Arena::CreateMaybeMessage< ::CKPacket::resRemoveFromToItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resRemoveFromToItem >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqInventoryItems*
Arena::CreateMaybeMessage< ::CKPacket::reqInventoryItems >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqInventoryItems >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resInventoryItems*
Arena::CreateMaybeMessage< ::CKPacket::resInventoryItems >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resInventoryItems >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::itemInfo*
Arena::CreateMaybeMessage< ::CKPacket::itemInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::itemInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqShopItemList*
Arena::CreateMaybeMessage< ::CKPacket::reqShopItemList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqShopItemList >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resShopItemList*
Arena::CreateMaybeMessage< ::CKPacket::resShopItemList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resShopItemList >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::shopItem*
Arena::CreateMaybeMessage< ::CKPacket::shopItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::shopItem >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqShopBuy*
Arena::CreateMaybeMessage< ::CKPacket::reqShopBuy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqShopBuy >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resShopBuy*
Arena::CreateMaybeMessage< ::CKPacket::resShopBuy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resShopBuy >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::reqShopSell*
Arena::CreateMaybeMessage< ::CKPacket::reqShopSell >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::reqShopSell >(arena);
}
template<> PROTOBUF_NOINLINE ::CKPacket::resShopSell*
Arena::CreateMaybeMessage< ::CKPacket::resShopSell >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CKPacket::resShopSell >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
